pipeline {
    agent {
        label 'AGENT-1'
    }

    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    parameters {
        choice(name: 'ACTION', choices: ['apply', 'delete'], description: 'Please select any one of the option')
    }

    stages {
        stage ("Init or Plan") {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                    cd 80-cdn
                    terraform init -reconfigure
                    terraform plan -out=tfplan
                    """
                }

            }
        }

        stage("Apply") {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                    cd 80-cdn
                    if [${params.ACTION == 'apply'} ]
                    then
                        terraform apply --auto-approve tfplan
                    fi
                    """
                }
            }

        }

        stage ("Destroy") {
            when {
                expression { params.ACTION == 'destroy' }
            }
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    script {
                        def directories = ['80-cdn', '70-ecr', '60-alb', '50-acm', '40-eks', '30-rds', '20-bastion', '10-sg', '00-vpc']
                        for (dir in directories) {
                            echo "Destroying the resources in directory: ${dir}"
                            sh """
                            cd ${dir}
                            terraform init -reconfigure
                            terraform destroy --auto-approve || { echo "Destroying the directory: ${dir} is failed"; exit 1; }
                            cd ..
                            """
                        }

                    }
                }
            }
        }
    }

    post {
        always {
            echo "This section is printed always irrespective of success or failure of above stages"
            deleteDir()
        }
        success {
            echo "This section is printed as above stages are successful"
        }
        failure {
            echo "This section is printed as above stages are failed"
        }
    }
    
}